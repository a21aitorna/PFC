services:
  db:
    image: mysql:8.0
    container_name: pfc-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: AteneaProject
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - pfc-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      timeout: 20s
      retries: 10
      start_period: 30s
      interval: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pfc-backend
    ports:
      - "5000:5000"
    env_file:
      - ./backend/envs/dev/.env
    environment:
      FLASK_APP: main
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: 5000
      FLASK_ENV: development
      DATABASE_URL: mysql+pymysql://root:root@db:3306/AteneaProject
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pfc-network
    command: >
      sh -c "sleep 15 &&
           python -m flask run --host=0.0.0.0"

  # -------------------
  # Frontend (React)
  # -------------------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pfc-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - pfc-network

  # Esto va para cuando haga el workflow
  # # -------------------
  # # Backend Testing (Newman / Postman)
  # # -------------------
  # backend-testing:
  #   build:
  #     context: ./tests/backend-testing
  #     dockerfile: Dockerfile
  #   container_name: backend-testing
  #   depends_on:
  #     - backend
  #   networks:
  #     - pfc-network

  # # -------------------
  # # Frontend Testing (Selenium + Cucumber Java)
  # # -------------------
  # frontend-testing:
  #   build:
  #     context: ./tests/frontend-testing
  #     dockerfile: Dockerfile
  #   container_name: frontend-testing
  #   depends_on:
  #     - backend
  #   # volumes:
  #     # - ./frontend-testing/reports:/app/reports
  #   networks:
  #     - pfc-network
  #   command: ["mvn", "test", "-Dcucumber.filter.tags=@*"]

  # -------------------
  # Selenium Grid
  # -------------------
  selenium-hub:
    image: selenium/hub:latest
    container_name: selenium-hub
    ports:
      - "4444:4444"
    networks:
      - pfc-network

  chrome:
    image: selenium/node-chrome:latest
    depends_on:
      - selenium-hub
    ports:
      - "7900:7900"
    environment:
      SE_EVENT_BUS_HOST: selenium-hub
      SE_EVENT_BUS_PUBLISH_PORT: 4442
      SE_EVENT_BUS_SUBSCRIBE_PORT: 4443
      SE_VNC_ENABLED: "true"
    networks:
      - pfc-network

  firefox:
    image: selenium/node-firefox:latest
    depends_on:
      - selenium-hub
    ports:
      - "7901:7900"
    environment:
      SE_EVENT_BUS_HOST: selenium-hub
      SE_EVENT_BUS_PUBLISH_PORT: 4442
      SE_EVENT_BUS_SUBSCRIBE_PORT: 4443
      SE_VNC_ENABLED: "true"
    networks:
      - pfc-network

# -------------------
# Red interna
# -------------------
networks:
  pfc-network:
    driver: bridge

volumes:
  mysql_data:

